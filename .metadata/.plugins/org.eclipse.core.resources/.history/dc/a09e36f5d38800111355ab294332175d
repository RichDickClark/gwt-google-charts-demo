/**
 * 
 */
package edu.mit.ll.CDRS;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

/**
 * @author ri18384
 *
 */
public class DiscreteTimeSimulation implements Runnable {

	@Override
	public void run() {
		// TODO Auto-generated method stub
		
	}
	
	/**
	 * A quantity of interest that is saved at each time in the simulation
	 * @author ri18384
	 *
	 */
	protected abstract class Metric
	{
		public Metric( String name )
		{
			// register this metric with the simulation
			metrics.put(name, this);
		}
		
		public abstract double calculate();
	}
	
	private HashMap<String,Metric> metrics = new HashMap<String,Metric>();
	
	/**
	 * Simulation repeatedly calls determineAction() and then evolveTime() on all of its entities
	 * @author ri18384
	 *
	 */
	protected abstract class Entity
	{
		protected Entity()
		{
			entities.add(this);
		}
		
		abstract void determineAction();
		
		abstract void evolveTime();
		
		abstract double getTimeStep();
	}
	
	private ArrayList<Entity> entities = new ArrayList<Entity>();
	
	public class Results
	{
		double[] times = null;
		Map<Metric,double[]> metrics = new HashMap<Metric,double[]>();
	}
	
	public Results results = null;
	
}
